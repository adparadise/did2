
* data entry
** --start
add a sanctioned way to mark the start of a session

** overnight
execute an operation to fix a task that spans days
it would:
  find the last entry on the prior day, 
  reenter it for 11:59:59 on that day
  and reenter it for 12:00:00 on the next day

** --amend last entry
replace all tags on last entry with the tags provided

** autofill last matching
helpful for longer strings of tags, in common configurations
** autofill from git
last commit time
** autofill from last modified
within current directory   
find . -type f| grep  -v '\.git'  | xargs -n1 ls -la | cut -d' ' -f 6-100 | sort | tail -n 1
* deployment
** gemify
create structure for gem locally
replace old gem or make a new one?

* reporting
** --report trees
smarter profile reports to show breakdowns

** --report combinatorial tags
for entries with 3 or more tags
  include all combinations of 2 tags, etc.

** --report entire project
roll up multiple days in reports, for all time

** --report across days
roll up multiple days in reports, with targeted bounds

** --list ranges
emit sensible ranges similar to git, HEAD~N

* archiving
** --archive
automatically issue a git commit with a meaningful message
? issue a git pull --rebase/push as well?
git add .; git commit -m "message"; git pull --rebase; #resolve conflicts; git add .; git rebase --continue; git push

** ?git ignore/rebuild tags
make a decision on how git is to be supported
should tags be left out of the repo?
how would they be managed after pulls?


* done
** --which
to disambiguate where logs are being written

** --list 
emit today's timesheet so far, with durations between entries

** --report targeting
provide a list of tags to include in the list

** gihub publish
make a new repo, or branch on existing?

